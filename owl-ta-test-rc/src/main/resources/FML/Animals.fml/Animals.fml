use org.openflexo.technologyadapter.owl.OWLModelSlot as OWL;

import ["http://openflexo.org/test/animals"] as ANIMALS;
import [ANIMALS:"Cat"] as CAT;

import org.openflexo.technologyadapter.owl.model.OWLOntology;

//type OWLIndividualType(owlClass=cat) as Cat;

@URI("http://www.openflexo.org/test/owl/Animals.fml")
public model Animals {
	OWLOntology ontology with OWLModelSlot();

	create(Resource<OWLOntology> aOWLOntologyResource) {
		ontology = parameters.aOWLOntologyResource.resourceData;
		log "Ontology: "+ontology;
	}

	public List<OWLClass> listAllOWLClasses() {
		List<OWLClass> returned = new ArrayList();
		for (OWLClass aClass : select OWLClass from ontology) {
			log "OWLClass: " + aClass;
			returned.add(aClass);
		}
		return returned;
	}

	public List<OWLClass> listDeclaredOWLClasses() {
		List<OWLClass> returned = new ArrayList();
		for (OWLClass aClass : select OWLClass from ontology) {
			if (aClass.ontology == ontology) {
				returned.add(aClass);
			}
		}
		return returned;
	}

	public List<OWLClass> listDeclaredOWLClasses2() {
		List<OWLClass> returned = new ArrayList();
		for (OWLClass aClass : select OWLClass with SelectOWLClass(declared=true) from ontology) {
				returned.add(aClass);
		}
		return returned;
	}

	public OWLClass selectUniqueOWLClass() {
		return select unique OWLClass from ontology where (selected.name=="Cat");
	}

	public List<OWLIndividual> listAllOWLIndividuals() {
		List<OWLIndividual> returned = new ArrayList();
		for (OWLIndividual anIndividual : select OWLIndividual from ontology) {
			log "OWLIndividual: " + anIndividual;
			returned.add(anIndividual);
		}
		return returned;
	}

	public List<OWLIndividual> listAllOWLIndividuals2() {
		return select OWLIndividual from ontology;
	}

	public OWLIndividual selectUniqueOWLIndividual() {
		return select unique OWLIndividual from ontology where (selected.name=="Jerry");
	}

/*	public void listAllCats() {
		for (Cat aCat : select Cat from ontology) {
			log "Cat: " + aCat;
		}
	}*/

}
